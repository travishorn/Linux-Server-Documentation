[[{"l":"Linux Server Documentation","p":["A small collection of simple instructions for setting up and configuring a Linux server from scratch.","This guide is intended for novice system administrators or even advanced ones that are not familiar with Linux, nginx, or some of the other covered topics.","Includes OS, SSH, git, Node.js, nginx, MariaDB, and more. Sections are split into ordered markdown files for easy viewing. While each section does build upon the previous ones, the configuration is basic and common enough that you may be able to jump to any section and follow the instructions from there.","If you follow this guide from start to finish, you will have a working Debian Linux server that...","you can connect to remotely","can host bare source code repositories","runs production web applications with continuous integration","serves content through a reverse-proxy over HTTP and HTTPS","is secured with a firewall","hosts a database with automatic backups","integrates database connectivity with a web app","provides web-based system monitoring","The end product is designed to be a baseline that you can extend with more functionality or harden for additional security depending on your needs."]}],[{"l":"Create a Virtual Machine with VirtualBox","p":["At this point, you can continue by installing the operating system.","Check the box for Enable EFI (special OSes only).","Click Audio from the pane on the left.","Click Finish.","Click Next.","Click OK.","Click Storage from the pane on the left.","Click System from the pane on the left.","Click the New button.","Click the Remove Controller button. It is near the bottom of the window and looks like a green diamond with a red \"X\" over top of it.","Click the Settings button.","Give the virtual machine a name. Example: \"myserver\".","If you don't already have it, download and install Oracle VM VirtualBox Manager.","Leave Create a Virtual Hard Disk Now selected and enter a disk size. It should probably be at least 20 GB. Choose a size that will accomodate any software, application files, and database data you will need.","Open Oracle VM VirtualBox Manager.","Uncheck Enable Audio.","Under Base Memory, choose half of the available memory.","Under Boot Order, uncheck Floppy and then move it below Hard Disk.","Under Chipset, choose ICH9.","Under Processors, choose half of the available processors.","Under Storage Devices, click to highlight Controller: IDE.","Under Type, choose Linux.","Under Version, choose the Linux version you will be installing. Example:\"Debian 11 Bullseye (64-bit)\".","VirtualBox will not use all of the specified space immediately. It will only use what it needs, up to a maximum of whatever you specify."]}],[{"l":"Install the Debian Linux Operating System"},{"l":"Prerequisites","p":["A physical machine is ready for fresh operating system installation or a new virtual machine has been created"]},{"l":"Download","p":["Go to the Installing Debian via the Internet page.","Under the section labeled Small CDs or USB sticks, click the architecture your server uses. If you're not sure, it's probably amd64.","The ISO image will start downloading. Make a note of where this ISO image is stored on your computer."]},{"l":"Create Installation Media","p":["If you're setting up the server on a virtual machine, you can skip this section. Otherwise, if you're setting up a physical machine, you'll need to follow the steps in this section to create a bootable flash drive with the ISO loaded.","Go to rufus.ie.","Under the Download section, click Rufus 3.22(the version number might be different).","Once the download completes, run the installer and follow its instructions to install Rufus.","Plug a USB flash drive into your machine.","The contents of this flash drive will be erased in the next few steps. Make a copy if you don't want to lose anything.","Click Start and look for Rufus. Click it to launch Rufus.","Under Device, select the flash drive you want to use.","Under Boot selection, click SELECT.","Navigate to where the ISO image you downloaded earlier is stored. Click to highlight it, then click Open.","Click START.","Once Rufus is finished, remove the flash drive from your machine and plug it into the server machine you're setting up. Make sure the machine is off."]},{"l":"Attaching the ISO","p":["If you're setting up the server on a physical machine, you can skip this section. Otherwise, if you're setting up a virtual machine, you'll need to follow the steps in this section to attach the ISO image you downloaded earlier as an optical disk.","Open Oracle VM VirtualBox Manager.","Look for the list of virtual machines on the left. Click to highlight the virtual machine to which you want to install the operating system.","Click the Settings button.","Click Storage from the pane on the left.","Under Storage Devices, click to highlight Controller: SATA","Click the Adds optical drive. button. It is next to \"Controller: SATA\" and looks like a blue disc with a green \"plus\" over top of it.","The Optical Disk Selector window appears. Click the Add button.","Navigate to where the ISO image you downloaded earlier is stored. Click to highlight it, then click Open.","Click Choose.","Click OK."]},{"l":"Install the Operating System","p":["After a few moments, a message will appear stating that the installation is complete. Click Continue.","Choose the keymap your keyboard uses and click Continue.","Choose your language and click Continue.","Choose your location and click Continue.","Click Continue.","Do not forget this password. You may want to record it in some password management software.","If you see a message about \"UEFI\" and the installer asks you if you want to Force UEFI installation?, choose Yes and click Continue.","If you're setting up a physical machine, press the power button to boot it up. You may need to press a specific key on the keyboard to access the boot menu. Watch your screen for instructions. If you miss it, you can restart the machine and try again. The goal is to get to the boot menu and boot from the inserted USB drive that has the Debian installation ISO loaded.","Leave the textbox for HTTP proxy information blank and click Continue.","Make sure Graphical install is selected and press Enter.","Otherwise, if you're setting up a virtual machine, click the Start button in Oracle VM VirtualBox Manager. Shortly, a window will appear containing your virtual machine.","The machine will reboot and the login screen will appear.","Under Amount of volume group to use for guided partitioning, leave the default (\"max\") entered.","Under Choose a password for the new user, enter a strong, unique password that you will log in with.","Under Choose softare to install, uncheck everything and then check SSH server and standard system utilities.","Under Debian archive mirror country, choose your country or the closest country to you.","Under Debian archive mirror, leave the default selected.","Under Domain name, enter the domain name for this machine. Make sure it matches other machines on your network. If you don't have any other machines on the network configured for a specific domain, you can choose any domain name here. Example: \"localdomain\".","Under Full name for the new user, enter your name. First and last is good enough. It's just something to identify you on the system.","Under Hostname, enter a descriptive hostname. Example: \"myserver\". Making the virtual machine's name in VirtualBox and the hostname here match is a good idea.","Under Participate in the package usage survey?, leave No selected and click Continue.","Under Partitioning method, click to highlight Guided - use entire disk and set up LVM.","Under Partitioning scheme, leave All files in one partition (recommended for new users) selected.","Under Re-enter password to verify, enter the same password again.","Under Root password, choose and enter a strong, unique password for the root user.","Under Scan extra installation media?, leave No selected.","Under Select disk to partition, make sure the correct hard disk is selected. There may only be one option. The size should be near what you entered for the Disk Size when creating the virtual machine.","Under Select your time zone, click to highlight the timezone in use where you are located.","Under Username for your account, enter the username you want to log in with. Your first name, all-lowercase is a good option. Another option is your first initial and your last name, all-lowercase.","Under Write the changes to disks and configure LVM?, choose Yes.","Under Write the changes to disks?, choose Yes."]},{"l":"Set up sudo","p":["Logging in and doing things as the root user is not recommended. Instead, you should log in and do things with you user account, and only do things as root when necessary using sudo. We have to install and configure sudo first.","Log in as root with the password you chose during installation.","Install sudo.","When asked to continue, press Enter.","Add your user account to the sudo group.","Make sure to replace [your username] with the username you chose during installation. All members of the sudo group can execute commands as root when necessary using sudo.","You are now ready to use your new server."]}],[{"l":"Port Forwarding in VirtualBox","p":["This guide is only necessary if your server is running on a virtual machine. Any time you need to connect to your virtual machine remotely, you'll need to make sure the appropriate port is forwarded.","The steps below focus on SSH and port 22, but you can use this guide for any service and port.","Open Oracle VM VirtualBox Manager on the host machine.","Click to select the virtual machine from the list on the left.","Click the Settings button.","Click Network from the pane on the left.","Under the Adapter 1 tab, click Advanced.","Click Port Forwarding.","Click the Adds new port forwarding rule. button. It's on the right side and it looks like a green diamond with a green \"plus\" on top of it.","In the table on the left, double-click Rule 1. This will allow you to edit the name of the rule. Type in the name of the service. For example, SSH.","Under Host Port, enter the port number you want the host machine to listen on. This can be anything, but for simplicity, I recommend using the same as the guest port. For SSH, use port 22.","If you have multiple virtual machines which you will be SSHing into, or you already have an SSH server running on the host machine itself, you may want to enter a different Host Port. In that case, choose any number you like between 1024 and 49152. Just make sure it is not in use by any other service.","Under Guest Port, enter the port number that your virtual machine is listening on. For SSH, use port 22.","Click OK.","Click OK again."]},{"l":"Other Ports","p":["For this series of guides, we will be setting up services that listen on the following ports. You should set up port forwarding for each of them:","HTTP, port 80","HTTPS, port 443","MariaDB, port 3306","Node.js, port 3000","Prometheus, port 9090","SSH, port 22"]}],[{"l":"Access a Remote Shell with OpenSSH"},{"l":"Prerequisites","p":["Linux is installed and a user(s) has been created","If using a virtual machine, port 22 is forwarded"]},{"l":"Install OpenSSH on the Server","p":["If you followed the guide Install the Debian Linux Operating System, OpenSSH server is installed and running already. You can skip this section.","Otherwise, install OpenSSH server."]},{"l":"Install OpenSSH on the Client","p":["To connect to your server via OpenSSH, you will need to install it on the machine you want to connect from. This will depend on your operating system.","If you're connecting from Windows, it may be installed by default. If not, follow these steps:","Open Settings> Apps> Optional Features","Search for OpenSSH Client","Select Install","If you're connecting from Linux, install it using your package manager. For example, if you're using Debian Linux, run:","If you're connecting from Mac OS, OpenSSH client may already be installed."]},{"l":"Connect","p":["On your workstation machine (not the server - this could also be the host machine if you're using a virtual machine), open up a Terminal.","Connect to the server via SSH.","Be sure to replace [your username] with your actual username on the server and replace [your server's IP address/hostname] with your server's actual IP address or hostname.","If you're using a virtual machine, you're connecting from the host machine, and you have port 22 forwarded, you can use localhost as your server's hostname.","If you set up your SSH port to something other than 22, you must add -p [port number] to the end of the command.","If asked if you want to continue connecting, type yes and press Enter","You will be prompted for your user's password on the server. Enter it and press Enter.","You are now logged in to your server remotely via SSH."]}],[{"l":"SSH Key Authentication"},{"l":"Prerequisites","p":["OpenSSH server is running on your server","OpenSSH client is installed on your workstation"]},{"l":"Prepare the Server","p":["This section needs to be done once per local user account on the server.","Log in to the user account you want to use.","Create a directory called .ssh in your home directory.","Set the directory's permissions so only you, the owner can read, write, and execute it.","Create an empty authorized_keys file.","Set the file's permissions so only you, the owner can read and write it.","OpenSSH Server will give user account access to anyone who can provide a private key that matches the public keys stored in that file."]},{"l":"Generate an SSH Key Pair","p":["Next, create a key pair. The public key will be added to the previously created authorized_keys file.","On your workstation (not the server), open up a Terminal.","Create a directory called .ssh in your home directory.","Change into the directory.","Generate a key pair.","For example:","You can actually replace [your name]@[location of workstation]-[timestamp] with anything you want. But I recommend the above because it will help identify a key by the name of the person it belongs to, the location it will be used from, and the date it was created.","Upon running the command, you will be asked for a passphrase. You can choose anything you want here, or you can leave it blank. Make sure you understand the security implications of leaving the passphrase blank before you do it.","Two files are created:","myname@work-2023-05-01","myname@work-2023-05-01.pub","myname@work-2023-05-01 contains your private key that you will need to provide any time you try to connect to the server. It is not recommended to copy this file to another machine. If you need to connect from multiple machines, create multiple key pairs. Protect this file like a password.","myname@work-2023-05-01.pub contains your public key that you can share. Any user on any device which has this key entered into its authorized_keys file grants you access to the user account (as long as you can provide the private key)."]},{"l":"Add a Public Key to a User","p":["Once you have a key pair, you'll want to add the public key to a local user account on the server.","From your workstation, copy the public key into the server user's authorized_keys file.","Be sure to replace [public key filename] with the actual public key filename,[your username] with your actual username on the server, and [your server's IP address/hostname] with your server's actual IP address or hostname.","If you're using a virtual machine, you're connecting from the host machine, and you have port 22 forwarded, you can use localhost as your server's hostname.","The command will need the user's current password to log in and copy the public key."]},{"l":"Connecting to the Server using an SSH Key","p":["From your workstation, connect to the server, providing the SSH private key for authentication.","You will be asked for the key pair's passphrase (if any). Once authenticated, you will be connected to your server as before."]},{"l":"Using a Configured Host","p":["The command you must execute to connect to your server via SSH is tedious to type out. You can alleviate this with a configured host.","On your workstation, create or edit ~/.ssh/config.","Make sure to replace myserver and myusername with the appropriate values.","With that file saved, you can execute the much shorter ssh command."]},{"l":"Disabling Password Authentication","p":["Once SSH key authentication is set up and working correctly, you may want to disable the less-secure password authentication.","Edit /etc/ssh/sshd_config. Somewhere in the file, add the following line.","Restart the SSH server."]},{"l":"Removing Access","p":["If you need to remove access from a particular key pair, edit the server user's~/.ssh/authorized_keys file. and delete the line which has the public key you want to remove."]}],[{"l":"Set up a git Server"},{"l":"Prerequisites","p":["A working Linux server machine","You are logged in as a non-root user with sudo privileges"]},{"l":"Install git","p":["If it isn't already installed, install git."]},{"l":"Global configuration","p":["Set a default initial branch name in git","Feel free to change the name master above to anything you like. While master is common, so is main.","Configure git to reconcile divergent branches."]},{"l":"Create Storage Directory","p":["You'll need a place to store any git repositories. To keep things organized, create a separate directory for them.","At this point, the server is set up to store git repositories. Next, you should start creating new repositories on the server that they can pull from and push to."]}],[{"l":"Create a New git Repository"},{"l":"Prerequisites","p":["The server has been set up as a git server","You are logged in as the non-root user"]},{"l":"Create and set permissions","p":["Initialize a bare repository in the home directory.","Change [repo name] to a name of your choosing. Example: my-app","Now developers who have the git user's credentials can clone, pull from, and push to this repository."]}],[{"i":"install-nodejs","l":"Install Node.js","p":["In order to install Node.js, first install curl.","Assume the root user","Install the latest LTS Node.js release","The above command(s) will install version 18.x. There may be a more recent LTS release. You can find out at https://nodejs.org.","Exit the root user shell","Make sure Node.js is installed correctly by getting its version number","It should display something like:","The exact version number might vary."]},{"l":"Create an App Directory","p":["To stay organized, I recommend creating a directory to store any apps you might deploy.","You are now ready to run and serve Node.js web apps."]}],[{"l":"Pull from and Push to a git Repository"},{"l":"Prerequisites","p":["The server has been set up as a git server","A bare repository has been created on the server"]},{"l":"Working with the Remote Repository","p":["First, clone the repository on your development machine","Example:","If you're using a virtual machine, you're cloning from the host machine, and you have port 22 forwarded, you can use localhost as the hostname.","You will be prompted to enter the myuser user's password.","A new directory named myrepo(or whatever your repository is named) is created on your development machine. Change into it.","You can pull any new changes from the remote repository at any time.","And you can push your changes to it."]},{"l":"SSH Key Authentication","p":["You will need to share the myuser password with each developer who needs pull/push access. Developers will also need to enter the myuser user's password each time they pull/push. This is not ideal. You can bypass this by setting up SSH keys if desired.","Make sure you have...","set up SSH key authentication on your server","added your public key to the server user's authorized_keys file","added your server as a configured host on your workstation","All of those tasks can be found in the guide SSH Key Authentication.","When all of the above is set up, you can clone the repository.","myserver here is the name of the configured host set up in ~/.ssh/config, not necessarily the server's hostname (although they can be the same).","You will be asked for your SSH key passphrase (if any) rather than the server user's password. This eliminates the need to share that password.","If you don't want to enter the SSH key passphrase each time, you can use an SSH agent (recommended - find more information online) or you can use a key pair with an empty passphrase (not recommended)."]}],[{"i":"serve-a-nextjs-app","l":"Serve a Next.js App"},{"l":"Prerequisites","p":["Node.js is installed","The Next.js app's source code is accessible in a git repository","If using a virtual machine, port 3000 is forwarded"]},{"l":"Clone the repository","p":["Use git clone to clone the repository. The repository could be located anywhere. If you have it set up on the same server as you're currently using, inside the repos directory, you can clone it by passing git clone the path to the repository.","Change into the repository.","Install the project's dependencies.","Disable Next.js telemetry.","Build the project.","Serve the project","By default, the app will be accessible on port 3000."]},{"l":"Test the Application Server","p":["Open a web browser and visit http://[your server's IP address/hostname]:3000.","If you're using a virtual machine, are working from the host machine, and you have port 3000 forwarded, you can visit http://localhost:3000.","You may wish to manage the Node.js process using PM2. See Manage Node.js Processes with PM2."]}],[{"i":"manage-nodejs-processes-with-pm2","l":"Manage Node.js Processes with PM2"},{"l":"Prerequisites","p":["A Node.js app (Next.js or otherwise) is servable","The Node.js app is not currently running","If using a virtual machine, port 3000 is forwarded"]},{"l":"Setup","p":["Install PM2 globally using npm.","Create the file ~/apps/ecosystem.config.js.","Start the web app process.","Check that the web app is running at http://localhost:3000.","Save the currently running configuration.","View the startup script command.","That command will output a command that looks something like this:","Copy the command. Paste it into your terminal and run it.","PM2 will now automatically start the saved Node.js processes at system startup. Try restarting the machine to test it.","You will probably want the server serving the web app(s) on port 80 and/or port 443 for HTTP/HTTPS. For that, you will have to set up a reverse proxy."]}],[{"l":"Continuous Integration"},{"l":"Prerequisites","p":["A Node.js app (Next.js or otherwise) is being managed by PM2"]},{"l":"Set up CI","p":["Create a post-receive git hook by creating a file named ~/repos/[repo name]/hooks/post-receive.","Make the hook executable.","Every time changes are pushed to the repository, the post-receive hook will execute, pulling in the new changes to the running application. Once the changes are pulled in, PM2 will detect the file changes, rebuild the app, and restart the server."]}],[{"l":"Reverse Proxy Using nginx"},{"l":"Prerequisites","p":["A running web application on port 3000","If using a virtual machine, port 80 is forwarded"]},{"l":"Install nginx","p":["You should be able to visit http://localhost and see the \"Welcome to nginx!\" page."]},{"l":"Configure nginx","p":["Edit the nginx configuration file at /etc/nginx/sites-available/default.","location / { proxy_pass http://localhost:3000; proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection'upgrade'; proxy_set_header Host $host; proxy_cache_bypass $http_upgrade; }","If successful, restart the nginx service to apply the changes.","In your web browser, visit http://[your server's IP address/hostname]. You should see your Node.js app.","If you're using a virtual machine, are working from the host machine, and you have port 80 forwarded, you can visit http://localhost."]},{"l":"Block Direct App Access","p":["All requests to the web application should go through port 80 (or 443 if you set up HTTPS/SSL later). However, the application is still listening on port 3000. Use a firewall to block external requests to port 3000. See separate guide."]}],[{"l":"Firewall Configuration with nftables","p":["Debian Linux comes with nftables installed by default.","Edit the nftables configuration file located at /etc/nftables.conf","Enable the nftables service so it starts when the machine starts.","Start the nftables service now","If the service is already running and you just want to apply changes you recently made to the configuration, just restart the service."]},{"l":"Add a New Firewall Rule","p":["Any time you want to allow traffic for a new service on a specific port, you must add a new firewall rule.","Edit the nftables configuration file located at /etc/nftables.conf","Find the line that looks like this:","Add the new port into the comma-separated list inside curly braces. For example, if you want to add a rule that allows port 3306, the line will look like this:","Some ports have aliases (like ssh and http) that nftables recognizes.","Restart nftables to apply the new rules."]},{"l":"More Rules","p":["For this series of guides, we will be setting up services that listen on the following ports. You should set up firewall rules for all of them:","SSH, port 22, alias ssh","HTTP, port 80, alias http","HTTPS, port 443, alias https","MariaDB, port 3306, alias mysql","Prometheus, port 9090"]}],[{"i":"httpsssl-on-nginx","l":"HTTPS/SSL on nginx"},{"l":"Prerequisites","p":["nginx configured as a reverse proxy for a web application","a domain name (or scroll down to the \"Self-Signed\" section below)","A firewall rule to accept traffic on TCP port 443 has been added","If using a virtual machine, port 443 is forwarded"]},{"l":"Prepare your nginx Configuration","p":["Edit /etc/nginx/sites-available/default","Find the line that starts with server_name and replace the _ character with the domain name the server will use. You can configure multiple domains by separating them with a space.","Save and close the file.","Verify the nginx configuration.","If all is well, reload nginx."]},{"l":"Use Certbot to enable HTTPS","p":["Use Certbot if your server is public-facing and you are ready to install a real certificate signed by Let's Encrypt(a Certificate Authority which issues certificates for free). Skip to the next section if you just want to use a self-signed certificate.","Install certbot and python3-certbot-nginx.","Generate the SSL certificate.","You will be asked some questions, including your email address. Answer the questions to continue.","Certbot automatically generates the certificate and configures nginx for you. It also sets a timer that runs periodically that will automatically renew your certificate before it expires.","With the firewall allowing connections and the certificate installed, you should be able to visit your domain using https:// and see your web app. You can also visit it via http:// and you should be automatically redirected to the https:// URL."]},{"l":"Self-Signed Certificate","p":["If you aren't ready to use a real certificate signed by an authority, you can use a self-signed certificate instead. Visitors to the site will receive a warning about the invalid certificate, but they can bypass it, making this a good option for testing and development.","Make a directory to store the certificate files.","Change into that directory."]},{"l":"Generate a Certificate","p":["If you have an actual certificate you want to use, you can skip this step.","You must answer a few questions about the certificate being generated. Most important is the common name. If you're using a custom domain name to reference this server, use that. For example myserver.dev. Otherwise, just use something like localhost.","Two new files, localhost.crt and localhost.key are generated at/etc/nginx/ssl."]},{"l":"Configuration","p":["Edit /etc/nginx/sites-available/default.","Above the existing server { block, add another, new server { block like so:","In the lower, already-existing server block, remove the first two lines (they both start with listen). Replace them with the following:","Save and close the file.","Test to make sure the nginx configuration is valid.","If it is, restart the nginx service.","You should now be able to visit https://localhost and see your web app. You can also visit http://localhost and you should be automatically redirected to https://localhost.","Since you're using a self-signed certificate, your browser will probably warn you that the certificate is invalid. You can usually bypass this by clicking Advanced and Proceed or something similar."]}],[{"l":"Storing Data with MariaDB"},{"l":"Prerequisites","p":["A firewall rule to accept traffic on TCP port 3306 has been added","If using a virtual machine, port 3306 is forwarded"]},{"l":"Install MariaDB"},{"l":"Create a Database and a User","p":["Log in as the root system user.","Create a database for your web application.","Create a user to represent your web application.","Replace [username] and [password] with the actual credentials you want your web applications to use when they authenticate to the database.","The % means that the user can connect from any IP address. Replace it with localhost to only allow local connections or replace it with an IP address to only allow connections from that IP address.","Grant database privileges to this user.","The same warning as above applies to this %.","Apply the privilege changes.","Exit the MariaDB REPL."]},{"l":"Allow Remote Connections","p":["Edit /etc/mysql/my.cnf.","Add the following lines at the end of the file.","Save and close the file.","Restart the database service."]}],[{"l":"Database Backup Recovery"},{"l":"Prerequisites","p":["The database is MariaDB","mariadb-backup is installed","You have a compressed backup file containing the state of the database to which you want to recover"]},{"l":"Take a Manual Backup","p":["Before continuing with data recovery, I highly recommend creating a manual backup, in case you need to revert back to the state before recovery started. See Database Backups."]},{"l":"Recover the Data","p":["Create a directory for storing the recovered files temporarily. It can be named anything you like. Here it is named recovered.","Unzip the compressed database backup in the directory.","Prepare the recovery files. This is necessary because files created at backup time are not point-in-time consistent and MariaDB will reject the recovery if not properly prepared.","Stop MariaDB.","Remove all existing data files.","Restore the backup files.","Change ownership of the newly recovered files so that the mysql user can access them properly.","Start MariaDB.","The database is now restored back to the state it was in when the backup was taken.","Remove the recovery files as they are no longer needed."]}],[{"i":"connect-to-mariadb-from-a-nextjs-app","l":"Connect to MariaDB from a Next.js App"},{"l":"Prequisites","p":["A running Next.js app","A running MariaDB (or MySQL) instance with user access configured"]},{"l":"Install Dependencies","p":["This solution uses serverless-mysql. Install it as a dependency."]},{"l":"Set Environment Variables","p":["Set the following environment variables in whichever way makes sense for your situation. If you are connecting to a development database server from a development machine, you may create a file called .env.local in the root directory of your app.","You may need to change the host or the port depending on your setup."]},{"l":"Create a Database Connection File","p":["Create a new file called lib/db.js in the root directory of your app.","We'll import this file into any file that needs to connect to the database."]},{"l":"Create an API Route","p":["Create a new file called pages/api/message.ts. Feel free to change \" message\" to something more appropriate for your application.","The request methods and queries will need to be changed to match your application.","At this point, (as long as the app is running) you can access the endpoint at http://localhost:3000/api/message."]},{"l":"Use this Endpoint on Client-side Pages","p":["Inside a client-side page like pages/index.tsx, import the useState and useEffect functions from react.","Then, inside export default function Home() {}, describe how to use and store the message text.","Now you can display the text on the page, inside the returned TSX."]}],[{"l":"Database Backups"},{"l":"Prerequisites","p":["MariaDB installed","One or more databases created","MariaDB has a root user which authenticates with the local filesystem account"]},{"l":"Install the Backup Utility"},{"l":"Create a Backup Script","p":["Create a backup script at /usr/local/bin/backup_databases.sh.","Make the script executable."]},{"l":"Configure Automatic Backups with systemd","p":["Create /etc/systemd/system/backup_databases.service.","Create /etc/systemd/system/backup_databases.timer.","Reload the system daemon to pick up the new service and timer.","Enable the timer so it starts when the system starts.","Start the timer now.","At this point, all MariaDB databases will be backed up to /var/mariadb/backup every day at midnight."]},{"l":"Manually Backing Up Databases","p":["You can back up databases at any time.","Or you could run the backup script.","Running the backup script will run the entire script, including the command which removes backups 14 days or older."]}],[{"l":"Monitoring with Prometheus"},{"l":"Prerequisites","p":["A firewall rule to accept traffic on TCP port 9090 has been added","If using a virtual machine, port 9090 is forwarded"]},{"l":"Installation","p":["Copy the listed URL. It will be labeled something like prometheus-2.37.6.linux-amd64.tar.gz.","Create a new systemd service file called/etc/systemd/system/prometheus.service.","Create a new user that will run the Prometheus daemon.","Enable the Prometheus service so it starts when the system starts.","Go to https://prometheus.io/download/.","If you're using a virtual machine, are working from the host machine, and you have port 9090 forwarded, you can go to http://localhost:9090 on the host machine.","In the prometheus section, find the version that is labeled LTS.","In your terminal, download the file at the copied URL.","Move all of the Prometheus files to /opt/prometheus.","Reload systemd daemons.","Set the new user as the owner of /opt/prometheus.","Start the Prometheus service.","The file will be downloaded to your machine. Unzip it.","The URL in the line above is just an example, use the actual URL you copied earlier.","To stay organized, remove the compressed file.","Under Architecture, choose amb64.","Under Operating System, choose linux.","Verify it works by going to http://[your server's IP address/hostname]:9090."]},{"l":"Add Authentication","p":["Right now, anyone who visits the URL will see all monitoring information. This could leak sensitive data. Prometheus has built-in basic authentication available for configuration.","First, a password hash must be created. You can use Python for this. Debian Linux comes preinstalled with Python 3.","Install python3-bcrypt.","Create a file called gen-pass.py.","Run the file with Python.","You will be prompted for a password. Enter a strong and unique password that you will use to log in to Prometheus's web user interface, then press Enter.","The password hash is output. Copy it.","Create a file called /opt/prometheus/web.yml.","For the username, choose any username you like. For the password hash, paste the password hash you copied earlier.","Edit /etc/systemd/system/prometheus.service to change the ExecStart line.","Reload systemd daemons.","Restart the Prometheus service.","Now, when you go to http://localhost:9090, a username/password prompt will appear. Enter the username and password you chose earlier to gain access."]},{"l":"Adding an Exporter","p":["Create a directory to store the exporters.","Create a new systemd service file at/etc/systemd/system/prometheus_node_exporter.service.","Edit /opt/prometheus/prometheus.yml.","Enable the exporter so it starts when the system starts.","Go to https://prometheus.io/download/.","In the node_exporter section, copy the listed URL. It will be labeled something like node_exporter-1.5.0.linux-amd64.tar.gz.","In your terminal, download the file at the copied URL.","Indented under the scrape_configs section, add the following.","Move the exporter executable to the exporters directory.","Prometheus comes with some basic metrics to monitor by default, but you'll want to use \"exporters\" which provide access to even more metrics. There are metrics for your hardware and OS (the \"Node exporter\" node_exporter), MySQL/MariaDB(the \"MySQL Server Exporter\" mysqld_exporter), and more.","Reload systemd daemons","Remove the compressed file.","Remove the remaining files.","Restart the Prometheus service.","Start the exporter","The binary you just copied is still owned by your user account. Change the ownership of it (and all other files in /opt/prometheus for good measure).","Under Architecture, choose amb64.","Under Operating System, choose linux.","Unzip the file.","Verify it works by going to http://localhost:9090/graph?g0.expr=rate(node_disk_io_time_seconds_total[1m]). That page will show you the rate of I/O operations of your system disks."]}]]